This folder contains files which might be useful for a deployment.

install-files.sh
----------------
Launches generate-files.sh and installs:
scheduler-init.sh
*.service

and enables the services.


generate-files.sh
-----------------
Takes as argument the path to <SCHEDULER_ROOT>, and generates
the files based on the .in templates.


postgresql-initdb.service
postgresql-initdb.sh
30-postgres-setup.conf
-------------------------
Can be used to configure Postgreses data folders.

postgresql-initdb.sh should go into:
/usr/libexec/postgresql-initdb.sh

30-postgres-setup.conf should go into, to overwrite the distro .service file:
/etc/systemd/system/postgresql.service.d/30-postgres-setup.conf


database.yml
------------
Simple database config file. Should go into:
<SCHEDULER_ROOT>/config

pg_dump.sql
-----------
To create the basic DB schema, run:
as root:
./install-files.sh
./postgresql-initdb.sh
systemctl start postgresql.service
/usr/libexec/scheduler-init.sh


30-scheduler-journal.conf
-------------------------
Run journal in RAM, don't drop stuff.


scheduler.logrotate
-------------------
Logrotate example.


scheduler-init.service
scheduler-init.sh
----------------------
This ensures DB is migrated before any of the Scheduler services
started.

scheduler-init.sh should go into:
/usr/libexec/scheduler-init.sh


*.service
---------
Service files to start the various processes.
They expect the deployment to be in:
<SCHEDULER_ROOT>

*.service files go into:
/usr/lib/systemd/system/

Enable the services:
systemctl enable \
    scheduler-dealer.service \
    scheduler-rails.service \
    scheduler-init.service \
    scheduler-status-saver.service \
    scheduler-seapig-server.service \
    scheduler-seapig-router-session-manager.service \
    scheduler-seapig-postgres-notifier.service

scheduler-seapig-worker needs several instances to run, depending on the workload.
You need to enable them:
systemctl enable \
    scheduler-seapig-worker@proc-001.service \
    scheduler-seapig-worker@proc-002.service \
    scheduler-seapig-worker@proc-003.service \
    scheduler-seapig-worker@proc-004.service

Rails needs some secret, the scheduler-rails.service file includes
it from /etc/scheduler/secret.env, it can be created with:

cd <SCHEDULER_ROOT>/latest
mkdir /etc/scheduler/
echo "SECRET_KEY_BASE=$(bundle exec rake secret)" > /etc/scheduler/secret.env
chmod 600 /etc/scheduler/secret.env
chown schedy.schedy /etc/scheduler/secret.env


